{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport '@/views/modules/chat/css/messageBox.css';\nexport default {\n  data() {\n    return {\n      userData: {},\n      message: '',\n      userList: [],\n      msgList: []\n    };\n  },\n  created() {\n    this.getUserIp();\n  },\n  mounted() {\n    this.$nextTick(() => {});\n  },\n  methods: {\n    getUserIp() {\n      this.$http.get(`/chat/ip/address`).then(({\n        data\n      }) => {\n        this.userData = data.data;\n        this.init();\n      }).catch(() => {});\n    },\n    init() {\n      let that = this;\n      if (typeof WebSocket == 'undefined') {\n        //判断当前浏览器是否支持websocket\n        alert('当前浏览器不支持websocket，请求更换浏览器');\n      }\n      console.log('支持WebSocket');\n      let socketUrl = 'ws://location:8081/chat/share/' + this.userData.userIp;\n      var socket;\n      if (socket != null) {\n        socket.close();\n        socket = null;\n      }\n      socket = new WebSocket(socketUrl);\n      socket.onopen = function () {\n        console.log('websocket连接已经打开');\n      };\n      socket.onmessage = msg => {\n        console.log(\"收到消息\" + msg);\n        let data = JSON.parse(msg.data);\n        if (data.userIps) {\n          that.userList = data.userIps;\n        } else {\n          that.msgList.push(data);\n        }\n      };\n\n      //关闭事件\n      socket.onclose = () => {\n        console.log(\"websocket 已经关闭\");\n      };\n    },\n    send() {\n      if (!this.message.msg) {\n        this.$message({\n          message: '大兄弟请输入信息',\n          type: 'warning'\n        });\n      } else {\n        if (typeof WebSocket == 'undefined') {\n          console.log(\"您的浏览器不支持websocket\");\n        } else {\n          console.log(\"您的浏览器支持websocket\");\n          this.message.from = this.userData.userIp;\n          this.time = new Date().toLocaleTimeString();\n          socket.sent(JSON.stringify(this.message));\n          this.message.msg = '';\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","userData","message","userList","msgList","created","getUserIp","mounted","$nextTick","methods","$http","get","then","init","catch","that","WebSocket","alert","console","log","socketUrl","userIp","socket","close","onopen","onmessage","msg","JSON","parse","userIps","push","onclose","send","$message","type","from","time","Date","toLocaleTimeString","sent","stringify"],"sources":["src/views/modules/chat/messageBox.vue"],"sourcesContent":["<template>\r\n  <el-container style=\"height: 100%\">\r\n    <!-- 顶部操作栏 -->\r\n    <el-header>###</el-header>\r\n    <!-- 主页面 -->\r\n    <el-main style=\"height: 100%\">\r\n      <div class=\"chat-box\">\r\n        <div class=\"chat-left\"></div>\r\n        <div class=\"chat-right\">\r\n          <div class=\"input-chat-box\">\r\n            <div slot=\"header\" class=\"clearfix\">\r\n              <span>\r\n                {{\r\n                  '当前ip:  ' +\r\n                  userData.userIp +\r\n                  '::' +\r\n                  userData.province +\r\n                  userData.city\r\n                }}</span\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"output-chat-box\">\r\n            <el-row>\r\n              <el-input\r\n                type=\"textarea\"\r\n                :rows=\"4\"\r\n                placeholder=\"请输入内容\"\r\n                v-model=\"message\"\r\n              >\r\n              </el-input>\r\n              <el-button type=\"success\" plain>发送</el-button>\r\n              <el-button type=\"info\">取消</el-button>\r\n            </el-row>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </el-main>\r\n    <!-- 底部页面 -->\r\n    <el-footer>###</el-footer>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport '@/views/modules/chat/css/messageBox.css'\r\nexport default {\r\n  data() {\r\n    return {\r\n      userData: {},\r\n      message: '',\r\n      userList:[],\r\n      msgList:[]\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.getUserIp()\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {})\r\n  },\r\n  methods: {\r\n    getUserIp() {\r\n      this.$http\r\n        .get(`/chat/ip/address`)\r\n        .then(({ data }) => {\r\n          this.userData = data.data\r\n          this.init()\r\n        })\r\n        .catch(() => {})\r\n    },\r\n    init() {\r\n      let that=this;\r\n      if (typeof WebSocket == 'undefined') {\r\n        //判断当前浏览器是否支持websocket\r\n        alert('当前浏览器不支持websocket，请求更换浏览器')\r\n      }\r\n      console.log('支持WebSocket')\r\n      let socketUrl = 'ws://location:8081/chat/share/' + this.userData.userIp\r\n      var socket\r\n      if (socket != null) {\r\n        socket.close()\r\n        socket = null\r\n      }\r\n\r\n\r\n      socket = new WebSocket(socketUrl)\r\n      socket.onopen = function () {\r\n        console.log('websocket连接已经打开')\r\n      }\r\n\r\n      socket.onmessage = (msg)=>{\r\n          console.log(\"收到消息\"+msg)\r\n           let data =JSON.parse(msg.data)\r\n          if(data.userIps){\r\n            that.userList =data.userIps\r\n          }else{\r\n            that.msgList.push(data)\r\n          }\r\n      }\r\n\r\n      //关闭事件\r\n      socket.onclose =()=>{ \r\n        console.log(\"websocket 已经关闭\")\r\n         }\r\n    },\r\n\r\n    send(){\r\n      if(!this.message.msg){\r\n          this.$message({\r\n            message:'大兄弟请输入信息',\r\n            type:'warning'\r\n          });\r\n      }else{\r\n        if(typeof(WebSocket)=='undefined'){\r\n            console.log(\"您的浏览器不支持websocket\")\r\n        }else{\r\n          console.log(\"您的浏览器支持websocket\")\r\n          this.message.from=this.userData.userIp;\r\n          this.time=new Date().toLocaleTimeString();\r\n          socket.sent(JSON.stringify(this.message));\r\n          this.message.msg='';\r\n        }\r\n      }\r\n    }\r\n  },\r\n}\r\n</script>\r\n<style></style>\r\n"],"mappings":";AA4CA;AACA;EACAA,KAAA;IACA;MACAC,QAAA;MACAC,OAAA;MACAC,QAAA;MACAC,OAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAH,UAAA;MACA,KAAAI,KAAA,CACAC,GAAA,qBACAC,IAAA;QAAAZ;MAAA;QACA,KAAAC,QAAA,GAAAD,IAAA,CAAAA,IAAA;QACA,KAAAa,IAAA;MACA,GACAC,KAAA;IACA;IACAD,KAAA;MACA,IAAAE,IAAA;MACA,WAAAC,SAAA;QACA;QACAC,KAAA;MACA;MACAC,OAAA,CAAAC,GAAA;MACA,IAAAC,SAAA,2CAAAnB,QAAA,CAAAoB,MAAA;MACA,IAAAC,MAAA;MACA,IAAAA,MAAA;QACAA,MAAA,CAAAC,KAAA;QACAD,MAAA;MACA;MAGAA,MAAA,OAAAN,SAAA,CAAAI,SAAA;MACAE,MAAA,CAAAE,MAAA;QACAN,OAAA,CAAAC,GAAA;MACA;MAEAG,MAAA,CAAAG,SAAA,GAAAC,GAAA;QACAR,OAAA,CAAAC,GAAA,UAAAO,GAAA;QACA,IAAA1B,IAAA,GAAA2B,IAAA,CAAAC,KAAA,CAAAF,GAAA,CAAA1B,IAAA;QACA,IAAAA,IAAA,CAAA6B,OAAA;UACAd,IAAA,CAAAZ,QAAA,GAAAH,IAAA,CAAA6B,OAAA;QACA;UACAd,IAAA,CAAAX,OAAA,CAAA0B,IAAA,CAAA9B,IAAA;QACA;MACA;;MAEA;MACAsB,MAAA,CAAAS,OAAA;QACAb,OAAA,CAAAC,GAAA;MACA;IACA;IAEAa,KAAA;MACA,UAAA9B,OAAA,CAAAwB,GAAA;QACA,KAAAO,QAAA;UACA/B,OAAA;UACAgC,IAAA;QACA;MACA;QACA,WAAAlB,SAAA;UACAE,OAAA,CAAAC,GAAA;QACA;UACAD,OAAA,CAAAC,GAAA;UACA,KAAAjB,OAAA,CAAAiC,IAAA,QAAAlC,QAAA,CAAAoB,MAAA;UACA,KAAAe,IAAA,OAAAC,IAAA,GAAAC,kBAAA;UACAhB,MAAA,CAAAiB,IAAA,CAAAZ,IAAA,CAAAa,SAAA,MAAAtC,OAAA;UACA,KAAAA,OAAA,CAAAwB,GAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}