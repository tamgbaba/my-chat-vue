{"ast":null,"code":"import axios from 'axios';\nconst service = axios.create({\n  baseURL: 'http://localhost:8081',\n  timeout: 5000,\n  withCredentials: true,\n  headers: {\n    get: {\n      'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\n    },\n    post: {\n      'Content-Type': 'application/json;charset=utf-8'\n    }\n  }\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  return config;\n}, error => {\n  // 错误抛到业务代码\n  error.data = {};\n  error.data.msg = '服务器异常，请联系管理员！';\n  return Promise.resolve(error);\n});\naxios.interceptors.reponse.use(res => {\n  // 请求成功对响应数据做处理，此处返回的数据是axios.then(res)中接收的数据\n  if (res.code == 0 || res.code == 200) {\n    // code值为 0 或 200 时视为成功\n    return Promise.resolve(res);\n  }\n  return Promise.reject(res);\n}, err => {\n  // 在请求错误时要做的事儿\n  error.data = {};\n  error.data.msg = '请求超时或服务器异常，请检查网络或联系管理员！';\n  // 此处返回的数据是axios.catch(err)中接收的数据\n  return Promise.reject(err);\n});\nexport default service;","map":{"version":3,"names":["axios","service","create","baseURL","timeout","withCredentials","headers","get","post","interceptors","request","use","config","error","data","msg","Promise","resolve","reponse","res","code","reject","err"],"sources":["H:/sweetheart/my-chat-vue/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst service = axios.create({\r\n  baseURL: 'http://localhost:8081',\r\n  timeout: 5000,\r\n  withCredentials: true,\r\n  headers: {\r\n    get: {\r\n      'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8',\r\n    },\r\n    post: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n  },\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  (config) => {\r\n    return config\r\n  },\r\n  (error) => {\r\n    // 错误抛到业务代码\r\n    error.data = {}\r\n    error.data.msg = '服务器异常，请联系管理员！'\r\n    return Promise.resolve(error)\r\n  }\r\n)\r\naxios.interceptors.reponse.use(\r\n  (res) => {\r\n    // 请求成功对响应数据做处理，此处返回的数据是axios.then(res)中接收的数据\r\n    if (res.code == 0 || res.code == 200) {\r\n      // code值为 0 或 200 时视为成功\r\n      return Promise.resolve(res)\r\n    }\r\n    return Promise.reject(res)\r\n  },\r\n  (err) => {\r\n    // 在请求错误时要做的事儿\r\n    error.data = {}\r\n    error.data.msg = '请求超时或服务器异常，请检查网络或联系管理员！'\r\n    // 此处返回的数据是axios.catch(err)中接收的数据\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\nexport default service\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE,IAAI;EACbC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACPC,GAAG,EAAE;MACH,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAE;MACJ,cAAc,EAAE;IAClB;EACF;AACF,CAAC,CAAC;;AAEF;AACAP,OAAO,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7BC,MAAM,IAAK;EACV,OAAOA,MAAM;AACf,CAAC,EACAC,KAAK,IAAK;EACT;EACAA,KAAK,CAACC,IAAI,GAAG,CAAC,CAAC;EACfD,KAAK,CAACC,IAAI,CAACC,GAAG,GAAG,eAAe;EAChC,OAAOC,OAAO,CAACC,OAAO,CAACJ,KAAK,CAAC;AAC/B,CAAC,CACF;AACDb,KAAK,CAACS,YAAY,CAACS,OAAO,CAACP,GAAG,CAC3BQ,GAAG,IAAK;EACP;EACA,IAAIA,GAAG,CAACC,IAAI,IAAI,CAAC,IAAID,GAAG,CAACC,IAAI,IAAI,GAAG,EAAE;IACpC;IACA,OAAOJ,OAAO,CAACC,OAAO,CAACE,GAAG,CAAC;EAC7B;EACA,OAAOH,OAAO,CAACK,MAAM,CAACF,GAAG,CAAC;AAC5B,CAAC,EACAG,GAAG,IAAK;EACP;EACAT,KAAK,CAACC,IAAI,GAAG,CAAC,CAAC;EACfD,KAAK,CAACC,IAAI,CAACC,GAAG,GAAG,yBAAyB;EAC1C;EACA,OAAOC,OAAO,CAACK,MAAM,CAACC,GAAG,CAAC;AAC5B,CAAC,CACF;AAED,eAAerB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}