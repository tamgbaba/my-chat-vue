{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport http from '@/utils/request';\nimport { isURL } from '@/utils/validate';\nVue.use(Router);\n\n// 页面路由(独立页面)\nexport const pageRoutes = [{\n  path: '/404',\n  component: () => import('@/views/pages/404'),\n  name: '404',\n  meta: {\n    title: '404未找到'\n  },\n  beforeEnter(to, from, next) {\n    // 拦截处理特殊业务场景\n    // 如果, 重定向路由包含__双下划线, 为临时添加路由\n    if (/__.*/.test(to.redirectedFrom)) {\n      return next(to.redirectedFrom.replace(/__.*/, ''));\n    }\n    next();\n  }\n}, {\n  path: '/login',\n  component: () => import('@/views/pages/login'),\n  name: 'login',\n  meta: {\n    title: '登录'\n  }\n}];\n\n// 模块路由(基于主入口布局页面)\nexport const moduleRoutes = {\n  path: '/',\n  component: () => import('@/views/main'),\n  name: 'main',\n  redirect: {\n    name: 'home'\n  },\n  meta: {\n    title: '主入口布局'\n  },\n  children: [{\n    path: '/home',\n    component: () => import('@/views/modules/home'),\n    name: 'home',\n    meta: {\n      title: '首页',\n      isTab: true\n    }\n  }]\n};\nexport function addDynamicRoute(routeParams, router) {\n  // 组装路由名称, 并判断是否已添加, 如是: 则直接跳转\n  var routeName = routeParams.routeName;\n  var dynamicRoute = window.SITE_CONFIG['dynamicRoutes'].filter(item => item.name === routeName)[0];\n  if (dynamicRoute) {\n    return router.push({\n      name: routeName,\n      params: routeParams.params\n    });\n  }\n  // 否则: 添加并全局变量保存, 再跳转\n  dynamicRoute = {\n    path: routeName,\n    component: () => import(`@/views/modules/${routeParams.path}`),\n    name: routeName,\n    meta: {\n      ...window.SITE_CONFIG['contentTabDefault'],\n      menuId: routeParams.menuId,\n      title: `${routeParams.title}`\n    }\n  };\n  router.addRoutes([{\n    ...moduleRoutes,\n    name: `main-dynamic__${dynamicRoute.name}`,\n    children: [dynamicRoute]\n  }]);\n  window.SITE_CONFIG['dynamicRoutes'].push(dynamicRoute);\n  router.push({\n    name: dynamicRoute.name,\n    params: routeParams.params\n  });\n}\nconst router = new Router({\n  mode: 'hash',\n  scrollBehavior: () => ({\n    y: 0\n  }),\n  routes: pageRoutes.concat(moduleRoutes)\n});\nrouter.beforeEach((to, from, next) => {\n  // 添加动态(菜单)路由\n  // 已添加或者当前路由为页面路由, 可直接访问\n  if (window.SITE_CONFIG['dynamicMenuRoutesHasAdded'] || fnCurrentRouteIsPageRoute(to, pageRoutes)) {\n    return next();\n  }\n  // 获取字典列表, 添加并全局变量保存\n  http.get('/sys/dict/type/all').then(({\n    data: res\n  }) => {\n    if (res.code !== 0) {\n      return;\n    }\n    window.SITE_CONFIG['dictList'] = res.data;\n  }).catch(() => {});\n\n  // 获取部门列表, 添加并全局变量保存\n  http.get('/sys/dept/all').then(({\n    data: res\n  }) => {\n    if (res.code !== 0) {\n      return;\n    }\n    window.SITE_CONFIG['deptList'] = res.data;\n  }).catch(() => {});\n\n  // 获取用户列表, 添加并全局变量保存\n  http.get('/sys/user/all').then(({\n    data: res\n  }) => {\n    if (res.code !== 0) {\n      return;\n    }\n    window.SITE_CONFIG['userList'] = res.data;\n  }).catch(() => {});\n\n  // 获取菜单列表, 添加并全局变量保存\n  http.get('/sys/menu/nav').then(({\n    data: res\n  }) => {\n    if (res.code !== 0) {\n      Vue.prototype.$message.error(res.msg);\n      return next({\n        name: 'login'\n      });\n    }\n    window.SITE_CONFIG['menuList'] = res.data;\n    fnAddDynamicMenuRoutes(window.SITE_CONFIG['menuList']);\n    next({\n      ...to,\n      replace: true\n    });\n  }).catch(() => {\n    next({\n      name: 'login'\n    });\n  });\n});\n\n/**\n * 判断当前路由是否为页面路由\n * @param {*} route 当前路由\n * @param {*} pageRoutes 页面路由\n */\nfunction fnCurrentRouteIsPageRoute(route, pageRoutes = []) {\n  var temp = [];\n  for (var i = 0; i < pageRoutes.length; i++) {\n    if (route.path === pageRoutes[i].path) {\n      return true;\n    }\n    if (pageRoutes[i].children && pageRoutes[i].children.length >= 1) {\n      temp = temp.concat(pageRoutes[i].children);\n    }\n  }\n  return temp.length >= 1 ? fnCurrentRouteIsPageRoute(route, temp) : false;\n}\n\n/**\n * 添加动态(菜单)路由\n * @param {*} menuList 菜单列表\n * @param {*} routes 递归创建的动态(菜单)路由\n */\nfunction fnAddDynamicMenuRoutes(menuList = [], routes = []) {\n  var temp = [];\n  for (var i = 0; i < menuList.length; i++) {\n    if (menuList[i].children && menuList[i].children.length >= 1) {\n      temp = temp.concat(menuList[i].children);\n      continue;\n    }\n    // 组装路由\n    var route = {\n      path: '',\n      component: null,\n      name: '',\n      meta: {\n        ...window.SITE_CONFIG['contentTabDefault'],\n        menuId: menuList[i].id,\n        title: menuList[i].name\n      }\n    };\n    // eslint-disable-next-line\n    let URL = (menuList[i].url || '').replace(/{{([^}}]+)?}}/g, (s1, s2) => eval(s2)); // URL支持{{ window.xxx }}占位符变量\n    if (isURL(URL)) {\n      route['path'] = route['name'] = `i-${menuList[i].id}`;\n      route['meta']['iframeURL'] = URL;\n    } else {\n      URL = URL.replace(/^\\//, '').replace(/_/g, '-');\n      route['path'] = route['name'] = URL.replace(/\\//g, '-');\n      route['component'] = () => import(`@/views/modules/${URL}`);\n    }\n    routes.push(route);\n  }\n  if (temp.length >= 1) {\n    return fnAddDynamicMenuRoutes(temp, routes);\n  }\n  // 添加路由\n  router.addRoutes([{\n    ...moduleRoutes,\n    name: 'main-dynamic-menu',\n    children: routes\n  }, {\n    path: '*',\n    redirect: {\n      name: '404'\n    }\n  }]);\n  window.SITE_CONFIG['dynamicMenuRoutes'] = routes;\n  window.SITE_CONFIG['dynamicMenuRoutesHasAdded'] = true;\n}\nexport default router;","map":{"version":3,"names":["Vue","Router","http","isURL","use","pageRoutes","path","component","name","meta","title","beforeEnter","to","from","next","test","redirectedFrom","replace","moduleRoutes","redirect","children","isTab","addDynamicRoute","routeParams","router","routeName","dynamicRoute","window","SITE_CONFIG","filter","item","push","params","menuId","addRoutes","mode","scrollBehavior","y","routes","concat","beforeEach","fnCurrentRouteIsPageRoute","get","then","data","res","code","catch","prototype","$message","error","msg","fnAddDynamicMenuRoutes","route","temp","i","length","menuList","id","URL","url","s1","s2","eval"],"sources":["H:/sweetheart/my-chat-vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport http from '@/utils/request'\nimport { isURL } from '@/utils/validate'\n\nVue.use(Router)\n\n// 页面路由(独立页面)\nexport const pageRoutes = [\n  {\n    path: '/404',\n    component: () => import('@/views/pages/404'),\n    name: '404',\n    meta: { title: '404未找到' },\n    beforeEnter (to, from, next) {\n      // 拦截处理特殊业务场景\n      // 如果, 重定向路由包含__双下划线, 为临时添加路由\n      if (/__.*/.test(to.redirectedFrom)) {\n        return next(to.redirectedFrom.replace(/__.*/, ''))\n      }\n      next()\n    }\n  },\n  { path: '/login', component: () => import('@/views/pages/login'), name: 'login', meta: { title: '登录' } }\n]\n\n// 模块路由(基于主入口布局页面)\nexport const moduleRoutes = {\n  path: '/',\n  component: () => import('@/views/main'),\n  name: 'main',\n  redirect: { name: 'home' },\n  meta: { title: '主入口布局' },\n  children: [\n    { path: '/home', component: () => import('@/views/modules/home'), name: 'home', meta: { title: '首页', isTab: true } }\n  ]\n}\n\nexport function addDynamicRoute (routeParams, router) {\n  // 组装路由名称, 并判断是否已添加, 如是: 则直接跳转\n  var routeName = routeParams.routeName\n  var dynamicRoute = window.SITE_CONFIG['dynamicRoutes'].filter(item => item.name === routeName)[0]\n  if (dynamicRoute) {\n    return router.push({ name: routeName, params: routeParams.params })\n  }\n  // 否则: 添加并全局变量保存, 再跳转\n  dynamicRoute = {\n    path: routeName,\n    component: () => import(`@/views/modules/${routeParams.path}`),\n    name: routeName,\n    meta: {\n      ...window.SITE_CONFIG['contentTabDefault'],\n      menuId: routeParams.menuId,\n      title: `${routeParams.title}`\n    }\n  }\n  router.addRoutes([\n    {\n      ...moduleRoutes,\n      name: `main-dynamic__${dynamicRoute.name}`,\n      children: [dynamicRoute]\n    }\n  ])\n  window.SITE_CONFIG['dynamicRoutes'].push(dynamicRoute)\n  router.push({ name: dynamicRoute.name, params: routeParams.params })\n}\n\nconst router = new Router({\n  mode: 'hash',\n  scrollBehavior: () => ({ y: 0 }),\n  routes: pageRoutes.concat(moduleRoutes)\n})\n\nrouter.beforeEach((to, from, next) => {\n  // 添加动态(菜单)路由\n  // 已添加或者当前路由为页面路由, 可直接访问\n  if (window.SITE_CONFIG['dynamicMenuRoutesHasAdded'] || fnCurrentRouteIsPageRoute(to, pageRoutes)) {\n    return next()\n  }\n  // 获取字典列表, 添加并全局变量保存\n  http.get('/sys/dict/type/all').then(({ data: res }) => {\n    if (res.code !== 0) {\n      return\n    }\n    window.SITE_CONFIG['dictList'] = res.data\n  }).catch(() => {})\r\n\r\n  // 获取部门列表, 添加并全局变量保存\r\n  http.get('/sys/dept/all').then(({ data: res }) => {\r\n    if (res.code !== 0) {\r\n      return\r\n    }\r\n    window.SITE_CONFIG['deptList'] = res.data\r\n  }).catch(() => {})\r\n\t\r\n\t  // 获取用户列表, 添加并全局变量保存\r\n\thttp.get('/sys/user/all').then(({ data: res }) => {\r\n\t  if (res.code !== 0) {\r\n\t    return\r\n\t  }\r\n\t  window.SITE_CONFIG['userList'] = res.data\r\n\t}).catch(() => {})\r\n  \n  // 获取菜单列表, 添加并全局变量保存\n  http.get('/sys/menu/nav').then(({ data: res }) => {\n    if (res.code !== 0) {\n      Vue.prototype.$message.error(res.msg)\n      return next({ name: 'login' })\n    }\n    window.SITE_CONFIG['menuList'] = res.data\n    fnAddDynamicMenuRoutes(window.SITE_CONFIG['menuList'])\n    next({ ...to, replace: true })\n  }).catch(() => {\n    next({ name: 'login' })\n  })\n})\n\n/**\n * 判断当前路由是否为页面路由\n * @param {*} route 当前路由\n * @param {*} pageRoutes 页面路由\n */\nfunction fnCurrentRouteIsPageRoute (route, pageRoutes = []) {\n  var temp = []\n  for (var i = 0; i < pageRoutes.length; i++) {\n    if (route.path === pageRoutes[i].path) {\n      return true\n    }\n    if (pageRoutes[i].children && pageRoutes[i].children.length >= 1) {\n      temp = temp.concat(pageRoutes[i].children)\n    }\n  }\n  return temp.length >= 1 ? fnCurrentRouteIsPageRoute(route, temp) : false\n}\n\n/**\n * 添加动态(菜单)路由\n * @param {*} menuList 菜单列表\n * @param {*} routes 递归创建的动态(菜单)路由\n */\nfunction fnAddDynamicMenuRoutes (menuList = [], routes = []) {\n  var temp = []\n  for (var i = 0; i < menuList.length; i++) {\n    if (menuList[i].children && menuList[i].children.length >= 1) {\n      temp = temp.concat(menuList[i].children)\n      continue\n    }\n    // 组装路由\n    var route = {\n      path: '',\n      component: null,\n      name: '',\n      meta: {\n        ...window.SITE_CONFIG['contentTabDefault'],\n        menuId: menuList[i].id,\n        title: menuList[i].name\n      }\n    }\n    // eslint-disable-next-line\n    let URL = (menuList[i].url || '').replace(/{{([^}}]+)?}}/g, (s1, s2) => eval(s2)) // URL支持{{ window.xxx }}占位符变量\n    if (isURL(URL)) {\n      route['path'] = route['name'] = `i-${menuList[i].id}`\n      route['meta']['iframeURL'] = URL\n    } else {\n      URL = URL.replace(/^\\//, '').replace(/_/g, '-')\n      route['path'] = route['name'] = URL.replace(/\\//g, '-')\n      route['component'] = () => import(`@/views/modules/${URL}`)\n    }\n    routes.push(route)\n  }\n  if (temp.length >= 1) {\n    return fnAddDynamicMenuRoutes(temp, routes)\n  }\n  // 添加路由\n  router.addRoutes([\n    {\n      ...moduleRoutes,\n      name: 'main-dynamic-menu',\n      children: routes\n    },\n    { path: '*', redirect: { name: '404' } }\n  ])\n  window.SITE_CONFIG['dynamicMenuRoutes'] = routes\n  window.SITE_CONFIG['dynamicMenuRoutesHasAdded'] = true\n}\n\nexport default router\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}